"""
3. comparisons
만약 2가지 조건을 동시에 만족해야만 한다면 어떨까요? 예를 들어 입력된 두 3의 배수이면서 2의 배수인 수를 찾아야 한다고 생각해 봅시다.
위의 조건을 잘 생각해 보면 조건이 2개임을 알 수 있습니다. 

3의 배수이다
2의 배수이다

이 두 조건을 만족시켜야 합니다. 따라서 이를 해결하기 위해서는 2개의 if문을 만들면 됩니다.
"""

### if 의 연산자의 사용
### 2의 배수 이면서 3의 배수인 수를 입력받아 확인하는 프로그램 작성

# num_1 = eval(input("2의 배수이고 3의 배수인 수를 입력하세요->"))

# if num_1 % 2 == 0:
#     if num_1 % 3 == 0:
#         print("맞았습니다!!")
#     else:
#         print("{}는 틀렸습니다".format(num_1))


### 어떤 조건에서 틀렸는지를 명확하게 알려주는 프로그램을 작성
# num_1 = eval(input("2의 배수이고 3의 배수인 수를 입력하세요->"))
# if num_1 % 2 == 0:
#     if num_1 % 3 == 0:
#         print("맞았습니다!!")
#     else:
#         print("{}는 3의 배수가 아닙니다.".format(num_1))
# else:
#     if num_1 % 3 != 0:
#         print('{}는(은) 2와 3의 배수가 아닙니다.'.format(num_1))
#     else:
#         print('{}는(은) 2의 배수가 아닙니다.'.format(num_1))

### and

# num_1 = eval(input("2의 배수이고 3의 배수인 수를 입력하세요->"))
# if num_1 % 2 == 0 and num_1 % 3 == 0:
#     print("맞았습니다!!")
# elif num_1 % 2 ==0 or num_1 % 3 == 0:
#     print('{}는(은) 2의 배수가 아니거나, 3의 배수가 아닙니다.'.format(num_1))
# else:
#     print('{}는(은) 2, 3의 배수가 아닙니다.'.format(num_1))


### not 

num_1 = eval(input("2의 배수이고 3의 배수인 수를 입력하세요->"))
if not num_1:
    print('0은 안됩니다!')
elif num_1 % 2 == 0 and num_1 % 3 == 0:
    print("맞았습니다!!")
elif num_1 % 2 ==0 or num_1 % 3 == 0:
    print('{}는(은) 2의 배수가 아니거나, 3의 배수가 아닙니다.'.format(num_1))
else:
    print('{}는(은) 2, 3의 배수가 아닙니다.'.format(num_1))
